from typing import Optional, Tuple, List
from organization_hierarchy import Employee, Leader, Organization, \
    DepartmentSalaryTree, create_department_salary_tree, \
    create_organization_from_file


#     e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
#     l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
#     oe = Organization()
#     of = Organization()
#     e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
#     e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
#     e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
#     e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
#     e05 = Employee(5, "emp05", "Tech", 600, 40)
#     e06 = Employee(6, "emp06", "AI", 500, 40)
#     e07 = Employee(7, "emp07", "AI", 400, 40)
#     e08 = Employee(8, "emp08", "AI", 300, 40)
#     e09 = Employee(9, "emp09", "Security", 200, 40)
#     e10 = Employee(10, "emp10", "Security", 100, 40)
#     e02.become_subordinate(e01)
#     e03.become_subordinate(e01)
#     e04.become_subordinate(e02)
#     e05.become_subordinate(e02)
#     e07.become_subordinate(e04)
#     e06.become_subordinate(e04)
#     e08.become_subordinate(e04)
#     e09.become_subordinate(e03)
#     e10.become_subordinate(e09)
#     f01 = Employee(1, "emp01", "Company", 10000, 40)
#     f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
#     f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
#     f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
#     f05 = Employee(5, "emp05", "Tech", 600, 40)
#     f06 = Employee(6, "emp06", "AI", 500, 40)
#     f07 = Employee(7, "emp07", "AI", 400, 40)
#     f08 = Employee(8, "emp08", "AI", 300, 40)
#     f09 = Employee(9, "emp09", "Security", 200, 40)
#     f10 = Employee(10, "emp10", "Security", 100, 40)
#     f02.become_subordinate(f01)
#     f03.become_subordinate(f01)
#     f04.become_subordinate(f02)
#     f05.become_subordinate(f02)
#     f07.become_subordinate(f04)
#     f06.become_subordinate(f04)
#     f08.become_subordinate(f04)
#     f09.become_subordinate(f03)
#     f10.become_subordinate(f09)
#     oe.add_employee(e01)
#     of.add_employee(f01)

def test_employee_init() -> None:
    e01 = Employee(1, "emp01", "Company", 10000, 40)
    assert e01.eid == 1
    assert e01.name == "emp01"
    assert e01.position == "Company"
    assert e01.salary == 10000
    assert e01.rating == 40

def test_employee_lt() -> None:
    e01 = Employee(1, "emp01", "Company", 10000, 40)
    e02 = Employee(2, "emp02", "Company", 10000, 40)
    assert e01 < e02
    assert not e02 < e01
    assert not e01 < e01

def test_employee_get_direct_subordinates() -> None:

    e02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head" )
    e04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 10000, 40)
    e06 = Employee(6, "emp06", "AI", 10000, 40)
    e07 = Employee(7, "emp07", "AI", 10000, 40)
    e08 = Employee(8, "emp08", "AI", 10000, 40)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    assert e02.get_direct_subordinates()[0].name == 'emp04'
    assert e02.get_direct_subordinates()[1].name == 'emp05'
    assert len(e02.get_direct_subordinates()) == 2
    assert len(e06.get_direct_subordinates()) == 0

def test_employee_get_all_subordinates() -> None:
    e02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head" )
    e04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 10000, 40)
    e06 = Employee(6, "emp06", "AI", 10000, 40)
    e07 = Employee(7, "emp07", "AI", 10000, 40)
    e08 = Employee(8, "emp08", "AI", 10000, 40)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    assert e02.get_all_subordinates()[0].eid == 4
    assert e02.get_all_subordinates()[-1].eid == 8
    assert len(e02.get_all_subordinates()) == 5

def test_employee_get_organization_head() -> None:
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
    e02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head" )
    e03 = Leader(3, "emp03", "Security", 10000, 40, "Security_head" )
    e04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 10000, 40)
    e06 = Employee(6, "emp06", "AI", 10000, 40)
    e07 = Employee(7, "emp07", "AI", 10000, 40)
    e08 = Employee(8, "emp08", "AI", 10000, 40)
    e09 = Employee(9, "emp09", "Security", 10000, 40)
    e10 = Employee(10, "emp10", "Security", 10000, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head" )
    f03 = Leader(3, "emp03", "Security", 10000, 40, "Security_head" )
    f04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head" )
    f05 = Employee(5, "emp05", "Tech", 10000, 40)
    f06 = Employee(6, "emp06", "AI", 10000, 40)
    f07 = Employee(7, "emp07", "AI", 10000, 40)
    f08 = Employee(8, "emp08", "AI", 10000, 40)
    f09 = Employee(9, "emp09", "Security", 10000, 40)
    f10 = Employee(10, "emp10", "Security", 10000, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert e09.get_organization_head().eid == e02.get_organization_head().eid == e01.get_organization_head().eid == 1
    assert f09.get_organization_head().eid == f02.get_organization_head().eid == f01.get_organization_head().eid == 1

def test_employee_get_superior() -> None:
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
    e02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head" )
    e03 = Leader(3, "emp03", "Security", 10000, 40, "Security_head" )
    e04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 10000, 40)
    e06 = Employee(6, "emp06", "AI", 10000, 40)
    e07 = Employee(7, "emp07", "AI", 10000, 40)
    e08 = Employee(8, "emp08", "AI", 10000, 40)
    e09 = Employee(9, "emp09", "Security", 10000, 40)
    e10 = Employee(10, "emp10", "Security", 10000, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head" )
    f03 = Leader(3, "emp03", "Security", 10000, 40, "Security_head" )
    f04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head" )
    f05 = Employee(5, "emp05", "Tech", 10000, 40)
    f06 = Employee(6, "emp06", "AI", 10000, 40)
    f07 = Employee(7, "emp07", "AI", 10000, 40)
    f08 = Employee(8, "emp08", "AI", 10000, 40)
    f09 = Employee(9, "emp09", "Security", 10000, 40)
    f10 = Employee(10, "emp10", "Security", 10000, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert e03.get_superior().eid == 1
    assert e09.get_superior().eid == 3
    assert f03.get_superior().eid == 1
    assert e10.get_superior().eid == 9
    assert e01.get_superior() is None
    assert f01.get_superior() is None

def test_employee_become_subordinate() -> None:
    e1 = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    e2 = Employee(2, "Sue Perior", "Manager", 20000, 30)
    e1.become_subordinate(e2)
    assert e1.get_superior().eid == 2
    assert e2.get_direct_subordinates()[0].eid == 1
    e1.become_subordinate(None)
    assert e1.get_superior() is None
    assert e2.get_direct_subordinates() == []

def test_employee_add_subordinate() -> None:
    e02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head")
    e04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head")
    e05 = Employee(5, "emp05", "Tech", 10000, 40)
    e06 = Employee(6, "emp06", "AI", 10000, 40)
    e07 = Employee(7, "emp07", "AI", 10000, 40)
    e08 = Employee(8, "emp08", "AI", 10000, 40)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e04.add_subordinate(e05)
    assert e04.get_direct_subordinates()[0].eid == 5

def test_employee_get_employee() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
    e02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head" )
    e03 = Leader(3, "emp03", "Security", 10000, 40, "Security_head" )
    e04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 10000, 40)
    e06 = Employee(6, "emp06", "AI", 10000, 40)
    e07 = Employee(7, "emp07", "AI", 10000, 40)
    e08 = Employee(8, "emp08", "AI", 10000, 40)
    e09 = Employee(9, "emp09", "Security", 10000, 40)
    e10 = Employee(10, "emp10", "Security", 10000, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 10000, 40, "Tech_head" )
    f03 = Leader(3, "emp03", "Security", 10000, 40, "Security_head" )
    f04 = Leader(4, "emp04", "AI", 10000, 40, "AI_head" )
    f05 = Employee(5, "emp05", "Tech", 10000, 40)
    f06 = Employee(6, "emp06", "AI", 10000, 40)
    f07 = Employee(7, "emp07", "AI", 10000, 40)
    f08 = Employee(8, "emp08", "AI", 10000, 40)
    f09 = Employee(9, "emp09", "Security", 10000, 40)
    f10 = Employee(10, "emp10", "Security", 10000, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert e01.get_employee(1) is e01
    assert e01.get_employee(5) is e05
    assert e05.get_employee(1) is None

def test_employee_get_employees_paid_more_than() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)

    assert e01.get_employees_paid_more_than(1000000) == []
    assert e03.get_employees_paid_more_than(400)[0].eid == 3
    assert e02.get_employees_paid_more_than(400)[-1].eid == 6

def test_employee_get_higher_paid_employees() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO")
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert e04.get_higher_paid_employees()[0].eid == 1
    assert e04.get_higher_paid_employees()[-1].eid == 3
    assert len(e04.get_higher_paid_employees()) == 3

def test_employee_get_closest_common_superior() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO")
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert f06.get_closest_common_superior(f05.eid) is f02
    assert f06.get_closest_common_superior(f02.eid) is f02
    assert f02.get_closest_common_superior(f03.eid) is f01
    assert e10.get_closest_common_superior(e08.eid)  is e01

def test_employee_get_department_name() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO")
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert e10.get_department_name() == 'Security_head'
    assert f01.get_department_name() == ''

def test_employee_get_position_in_hierarchy() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "CEO", 10000, 40, "Company")
    e02 = Leader(2, "emp02", "Tech_head", 900, 40, "Tech")
    e03 = Leader(3, "emp03", "Security_head", 800, 40, "Security")
    e04 = Leader(4, "emp04", "AI_head", 700, 40, "AI")
    e05 = Employee(5, "emp05", "Worker", 600, 40)
    e06 = Employee(6, "emp06", "Worker", 500, 40)
    e07 = Employee(7, "emp07", "Worker", 400, 40)
    e08 = Employee(8, "emp08", "Worker", 300, 40)
    e09 = Employee(9, "emp09", "Worker", 200, 40)
    e10 = Employee(10, "emp10", "Worker", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "CEO", 10000, 40)
    f02 = Leader(2, "emp02", "Tech_head", 900, 40, "Tech")
    f03 = Leader(3, "emp03", "Security_head", 800, 40, "Security")
    f04 = Leader(4, "emp04", "AI_head", 700, 40, "AI")
    f05 = Employee(5, "emp05", "Worker", 600, 40)
    f06 = Employee(6, "emp06", "Worker", 500, 40)
    f07 = Employee(7, "emp07", "Worker", 400, 40)
    f08 = Employee(8, "emp08", "Worker", 300, 40)
    f09 = Employee(9, "emp09", "Worker", 200, 40)
    f10 = Employee(10, "emp10", "Worker", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert e06.get_position_in_hierarchy() == 'Worker, AI, Tech, Company'
    assert f01.get_position_in_hierarchy() == 'CEO'
    assert e10.get_position_in_hierarchy() == 'Worker, Security, Company'

def test_employee_get_department_employees() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO")
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert e01.get_department_employees()[0] is e01
    assert e01.get_department_employees()[2] is e03
    assert e01.get_department_employees()[4] is e05
    assert e01.get_department_employees()[6] is e07
    assert e01.get_department_employees()[8] is e09
    assert e01.get_department_employees()[9] is e10
    assert e01.get_department_employees().__len__() == 10
    assert e02.get_department_employees()[0] is e02
    assert e02.get_department_employees()[2] is e05
    assert e02.get_department_employees()[4] is e07
    assert e02.get_department_employees()[5] is e08
    assert e02.get_department_employees().__len__() == 6

def test_employee_get_department_leader() -> None:
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e10.become_subordinate(e09)
    assert e09.get_department_leader() is None
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO")
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    assert e09.get_department_leader() is e03

def test_employee_become_leader() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    e09.become_leader("New D")
    assert oe.get_head().get_direct_subordinates()[1].get_direct_subordinates()[0].eid == 9
    assert oe.get_head().get_direct_subordinates()[1].get_direct_subordinates()[0].get_department_name() == 'New D'
    assert isinstance(oe.get_head().get_direct_subordinates()[1].get_direct_subordinates()[0], Leader) is True
    f03.become_leader('New E')
    assert of.get_head().get_direct_subordinates()[1].eid == 3
    assert of.get_head().get_direct_subordinates()[1].get_department_name() == 'New E'
    assert isinstance(
        of.get_head().get_direct_subordinates()[1],
        Leader) is True

def test_employee_become_employee() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO")
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    e02.become_employee()
    assert e01.get_direct_subordinates()[0].eid == 2
    assert e01.get_direct_subordinates().__len__() == 2
    assert isinstance(e01.get_direct_subordinates()[0], Leader) is False
    assert e01.get_direct_subordinates()[0].get_direct_subordinates().__len__() == 2
    assert e01.get_direct_subordinates()[0].get_all_subordinates().__len__() == 5

def test_employee_change_department_leader() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO")
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    e05.change_department_leader()
    assert e01.get_direct_subordinates()[0] is e03
    assert e01.get_direct_subordinates()[1].eid == 5
    assert len(e01.get_direct_subordinates()) == 2
    assert e01.get_direct_subordinates()[1].get_direct_subordinates()[0].eid == 2
    assert len(e01.get_direct_subordinates()[1].get_direct_subordinates()) == 1
    assert isinstance(e01.get_direct_subordinates()[1].get_direct_subordinates()[0], Leader) is False
    assert e01.get_direct_subordinates()[1].get_direct_subordinates()[0].get_direct_subordinates()[0] is e04
    assert len(e01.get_direct_subordinates()[1].get_direct_subordinates()[0].get_direct_subordinates()) == 1
    e03.change_department_leader()
    assert e01.get_direct_subordinates()[0] is e03
    assert len(e01.get_direct_subordinates()) == 2
    assert e01.get_direct_subordinates()[0].get_direct_subordinates()[0] is e09
    assert len(e01.get_direct_subordinates()[0].get_direct_subordinates()) == 1
    f09.change_department_leader()
    assert f01.get_direct_subordinates()[1].eid == 9
    assert len(f01.get_direct_subordinates()) == 2
    assert isinstance(f01.get_direct_subordinates()[1], Leader) is True
    assert f01.get_direct_subordinates()[1].get_direct_subordinates()[0].eid == 3
    assert f01.get_direct_subordinates()[1].get_direct_subordinates()[1] is f10
    assert len(f01.get_direct_subordinates()[1].get_direct_subordinates()) == 2

def test_employee_get_highest_rated_subordinate() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 41)
    e08 = Employee(8, "emp08", "AI", 300, 48)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    e01.get_highest_rated_subordinate().eid == 2
    e04.get_highest_rated_subordinate().eid == 8

def test_employee_swap_up() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    e03.swap_up()
    e05.swap_up()
    f03.swap_up()
    assert oe.get_head().eid == 3
    assert oe.get_head().name == 'emp03'
    assert len(oe.get_head().get_direct_subordinates()) == 2
    assert oe.get_head().get_direct_subordinates()[0].eid == 1
    assert oe.get_head().get_direct_subordinates()[0].name == 'emp01'
    assert oe.get_head().get_direct_subordinates()[0].get_direct_subordinates()[0].eid == 9
    assert len(oe.get_head().get_direct_subordinates()[0].get_direct_subordinates()) == 1
    assert oe.get_head().get_direct_subordinates()[1].eid == 5
    assert oe.get_head().get_direct_subordinates()[1].name == 'emp05'
    assert isinstance(oe.get_head(), Leader) is True
    assert isinstance(oe.get_head().get_direct_subordinates()[0], Leader) is True
    assert isinstance(oe.get_head().get_direct_subordinates()[1], Leader) is True
    assert isinstance(oe.get_head().get_direct_subordinates()[1].get_direct_subordinates()[0], Employee) is True
    assert len(oe.get_head().get_direct_subordinates()[1].get_direct_subordinates()) == 2

def test_employee_obtain_subordinates() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO")
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head")
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head")
    f03 = Leader(3, "emp03", "Security", 800, 41, "Security_head")
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head")
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    e02.obtain_subordinates([3])
    assert oe.get_head().eid == 1
    assert oe.get_head().get_direct_subordinates()[1].eid == 9
    assert len(oe.get_head().get_direct_subordinates()) == 2
    assert oe.get_head().get_direct_subordinates()[0].get_direct_subordinates()[0].eid == 3
    assert len(oe.get_head().get_direct_subordinates()[0].get_direct_subordinates()[0].get_direct_subordinates()) == 0
    assert oe.get_head().get_direct_subordinates()[0].get_direct_subordinates()[1].eid == 4
    assert oe.get_head().get_direct_subordinates()[0].get_direct_subordinates()[
               2].eid == 5
    of.set_head(f09.obtain_subordinates([1]))
    assert of.get_head().eid == 3
    assert of.get_head().get_direct_subordinates()[0].eid == 2
    assert of.get_head().get_direct_subordinates()[1].eid == 9
    assert len(of.get_head().get_direct_subordinates()) == 2
    assert of.get_head().get_direct_subordinates()[1].get_direct_subordinates()[0].eid == 1
    assert len(of.get_head().get_direct_subordinates()[1].get_direct_subordinates()[0].get_direct_subordinates()) == 0

def test_organization_add_employee() -> None:
    e = Employee(1, "Emma Ployee", "Worker", 10000, 50)
    l = Leader(2, "Sue Perior", "Manager", 20000, 30, "Department")
    oe = Organization()
    of = Organization()
    e01 = Leader(1, "emp01", "Company", 10000, 40, "CEO" )
    e02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    e03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    e04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    e05 = Employee(5, "emp05", "Tech", 600, 40)
    e06 = Employee(6, "emp06", "AI", 500, 40)
    e07 = Employee(7, "emp07", "AI", 400, 40)
    e08 = Employee(8, "emp08", "AI", 300, 40)
    e09 = Employee(9, "emp09", "Security", 200, 40)
    e10 = Employee(10, "emp10", "Security", 100, 40)
    e02.become_subordinate(e01)
    e03.become_subordinate(e01)
    e04.become_subordinate(e02)
    e05.become_subordinate(e02)
    e07.become_subordinate(e04)
    e06.become_subordinate(e04)
    e08.become_subordinate(e04)
    e09.become_subordinate(e03)
    # e10.become_subordinate(e09)
    f01 = Employee(1, "emp01", "Company", 10000, 40)
    f02 = Leader(2, "emp02", "Tech", 900, 40, "Tech_head" )
    f03 = Leader(3, "emp03", "Security", 800, 40, "Security_head" )
    f04 = Leader(4, "emp04", "AI", 700, 40, "AI_head" )
    f05 = Employee(5, "emp05", "Tech", 600, 40)
    f06 = Employee(6, "emp06", "AI", 500, 40)
    f07 = Employee(7, "emp07", "AI", 400, 40)
    f08 = Employee(8, "emp08", "AI", 300, 40)
    f09 = Employee(9, "emp09", "Security", 200, 40)
    f10 = Employee(10, "emp10", "Security", 100, 40)
    f02.become_subordinate(f01)
    f03.become_subordinate(f01)
    f04.become_subordinate(f02)
    f05.become_subordinate(f02)
    f07.become_subordinate(f04)
    f06.become_subordinate(f04)
    f08.become_subordinate(f04)
    f09.become_subordinate(f03)
    f10.become_subordinate(f09)
    oe.add_employee(e01)
    of.add_employee(f01)
    oe.add_employee(e10, 9)
    assert oe.get_head().get_direct_subordinates()[1].get_direct_subordinates()[0].get_direct_subordinates()[0].eid == 10
    assert len(oe.get_head().get_direct_subordinates()[1].get_direct_subordinates()[0].get_direct_subordinates()) == 1








if __name__ == "__main__":
    import pytest

    pytest.main(['test.py'])
